!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Node	halfman.h	/^    Node(uint8_t data, int freq) {$/;"	f	struct:Node
Node	halfman.h	/^struct Node {$/;"	s
buildHuffmanTable	halfman.h	/^void buildHuffmanTable(Node *root, unordered_map<uint8_t, string> &table, string code) {$/;"	f
buildHuffmanTree	halfman.h	/^Node *buildHuffmanTree(const unordered_map<uint8_t, int> &freq) {$/;"	f
data	halfman.h	/^    uint8_t data; \/\/ 数据$/;"	m	struct:Node
dataMaxSize	rlehalf.cpp	/^int dataMaxSize = 0x7fffffff;$/;"	v
freq	halfman.h	/^    int freq; \/\/ 频率$/;"	m	struct:Node
huffmanDecode	halfman.h	/^string huffmanDecode(const string &data, Node *root) {$/;"	f
huffmanEncode	halfman.h	/^string huffmanEncode(const uint8_t *data, int size, const unordered_map<uint8_t, string> &table) {$/;"	f
left	halfman.h	/^    Node *left, *right; \/\/ 左右子节点$/;"	m	struct:Node
main	halfmantest.cpp	/^int main() {$/;"	f
main	rlehalf.cpp	/^int main (){$/;"	f
main	rletest.cpp	/^int main () {$/;"	f
operator <	halfman.h	/^    bool operator<(const Node &other) const {$/;"	f	struct:Node
readpixel	readimg.h	/^int readpixel (uint8_t *  pixel, char *filename) {$/;"	f
right	halfman.h	/^    Node *left, *right; \/\/ 左右子节点$/;"	m	struct:Node
rleDecode	rlenew.h	/^int rleDecode(const uint8_t *code, int n, uint8_t* res){$/;"	f
rleEncode	rlenew.h	/^int rleEncode (const uint8_t* data , int n, uint8_t * code) {$/;"	f
